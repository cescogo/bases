;fun fact(n){
;  let {
;     f = 1;
;  }{
;     while(n > 0){
;	    f = f * n;
;		n = n - 1;
;	 }
;	 return f;
;  }
;}
;
;fun main(){
;   print_string("fact(5)=");
;   print_number(fact(5));
;}

JMP start
fact: DB "fact(5)=" ; Variable
	  DB 0
numero: DB 5
start:
	push fact 
	CALL print_string
	MOV A, 1
	MOV C, [numero]
	MOV D, 234	; Point to output
	CALL fact
	HLT             ;Stop execution
aux: 
     MUL C
     DEC C
     JNZ .loop
fact:
	.loop: 
		CMP C, 0
		JNZ aux
	.print:
		MOV B, A
		DIV 10
		MOV C, A
		MUL 10
		
		SUB B, A
		ADD B, 48
		MOV [D], B	
		DEC D  
		MOV A, C
		CMP C, 0	
		JNZ .print	
		RET		
;---------------------------------------
print_string:
     POP C
     POP B
     PUSH C 
.print_string_loop_01:
     MOV C, [B]
	 CMP C, 0
	 JE .print_string_exit
	 MOV [D], C
	 INC D
	 INC B
	 JMP .print_string_loop_01
.print_string_exit:
     POP C 
     PUSH C
     RET
	 
;---------------------------------------

